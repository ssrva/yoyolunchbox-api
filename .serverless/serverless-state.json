{
  "service": {
    "service": "yoyolunchbox-api",
    "serviceObject": {
      "name": "yoyolunchbox-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "iam": {
        "role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role"
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-createUser"
            }
          },
          "GetUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-getUser"
            }
          },
          "UpdateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-updateUser"
            }
          },
          "GetUserOrdersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-getUserOrders"
            }
          },
          "GetUserTransactionsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-getUserTransactions"
            }
          },
          "CreatePaymentsOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-createPaymentsOrder"
            }
          },
          "UpdateWalletBalanceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-updateWalletBalance"
            }
          },
          "GetUserWalletBalanceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-getUserWalletBalance"
            }
          },
          "GetMenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-getMenu"
            }
          },
          "GetFoodImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-getFoodImage"
            }
          },
          "PlaceOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-placeOrder"
            }
          },
          "CancelOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-cancelOrder"
            }
          },
          "AdminGetOrdersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetOrders"
            }
          },
          "AdminPlaceOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminPlaceOrder"
            }
          },
          "AdminUpdateOrderStatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminUpdateOrderStatus"
            }
          },
          "AdminGetMenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetMenu"
            }
          },
          "AdminGetTransactionsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetTransactions"
            }
          },
          "AdminAddMenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminAddMenu"
            }
          },
          "AdminEditMenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminEditMenu"
            }
          },
          "AdminDeleteMenuLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminDeleteMenu"
            }
          },
          "AdminGetUserWalletBalanceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetUserWalletBalance"
            }
          },
          "AdminGetUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetUser"
            }
          },
          "AdminUpdateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminUpdateUser"
            }
          },
          "AdminAddUserTransactionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminAddUserTransaction"
            }
          },
          "AdminUpdateOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminUpdateOrder"
            }
          },
          "AdminCancelOrderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminCancelOrder"
            }
          },
          "AdminGetOrdersToExportLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetOrdersToExport"
            }
          },
          "AdminExportOrdersToShipDayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminExportOrdersToShipDay"
            }
          },
          "AdminGetAllUsersLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/yoyolunchbox-api-production-adminGetAllUsers"
            }
          },
          "CreateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.createUser",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-createUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "CreateUserLogGroup"
            ]
          },
          "GetUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getUser",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-getUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "GetUserLogGroup"
            ]
          },
          "UpdateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.updateUser",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-updateUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "UpdateUserLogGroup"
            ]
          },
          "GetUserOrdersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getUserOrders",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-getUserOrders",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "GetUserOrdersLogGroup"
            ]
          },
          "GetUserTransactionsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getUserTransactions",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-getUserTransactions",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "GetUserTransactionsLogGroup"
            ]
          },
          "CreatePaymentsOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/payments.createPaymentsOrder",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-createPaymentsOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role"
            },
            "DependsOn": [
              "CreatePaymentsOrderLogGroup"
            ]
          },
          "UpdateWalletBalanceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/payments.updateWalletBalance",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-updateWalletBalance",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "UpdateWalletBalanceLogGroup"
            ]
          },
          "GetUserWalletBalanceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getUserWalletBalance",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-getUserWalletBalance",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "GetUserWalletBalanceLogGroup"
            ]
          },
          "GetMenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/menu.getMenu",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-getMenu",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "GetMenuLogGroup"
            ]
          },
          "GetFoodImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/food.getFoodImage",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-getFoodImage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role"
            },
            "DependsOn": [
              "GetFoodImageLogGroup"
            ]
          },
          "PlaceOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.placeOrder",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-placeOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "PlaceOrderLogGroup"
            ]
          },
          "CancelOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.cancelOrder",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-cancelOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "CancelOrderLogGroup"
            ]
          },
          "AdminGetOrdersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.getOrders",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetOrders",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetOrdersLogGroup"
            ]
          },
          "AdminPlaceOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.placeOrder",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminPlaceOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminPlaceOrderLogGroup"
            ]
          },
          "AdminUpdateOrderStatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.updateOrderStatus",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminUpdateOrderStatus",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminUpdateOrderStatusLogGroup"
            ]
          },
          "AdminGetMenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/menu.getMenu",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetMenu",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetMenuLogGroup"
            ]
          },
          "AdminGetTransactionsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/payments.getTransactions",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetTransactions",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetTransactionsLogGroup"
            ]
          },
          "AdminAddMenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/menu.addMenu",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminAddMenu",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminAddMenuLogGroup"
            ]
          },
          "AdminEditMenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/menu.editMenu",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminEditMenu",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminEditMenuLogGroup"
            ]
          },
          "AdminDeleteMenuLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/menu.deleteMenu",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminDeleteMenu",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminDeleteMenuLogGroup"
            ]
          },
          "AdminGetUserWalletBalanceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getUserWalletBalance",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetUserWalletBalance",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetUserWalletBalanceLogGroup"
            ]
          },
          "AdminGetUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getUser",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetUserLogGroup"
            ]
          },
          "AdminUpdateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.adminUpdateUser",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminUpdateUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminUpdateUserLogGroup"
            ]
          },
          "AdminAddUserTransactionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.addTransaction",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminAddUserTransaction",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminAddUserTransactionLogGroup"
            ]
          },
          "AdminUpdateOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.updateOrder",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminUpdateOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminUpdateOrderLogGroup"
            ]
          },
          "AdminCancelOrderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.cancelOrder",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminCancelOrder",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminCancelOrderLogGroup"
            ]
          },
          "AdminGetOrdersToExportLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.getOrdersToExport",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetOrdersToExport",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetOrdersToExportLogGroup"
            ]
          },
          "AdminExportOrdersToShipDayLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/orders.exportToShipDay",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminExportOrdersToShipDay",
              "MemorySize": 1024,
              "Timeout": 300,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role"
            },
            "DependsOn": [
              "AdminExportOrdersToShipDayLogGroup"
            ]
          },
          "AdminGetAllUsersLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z/yoyolunchbox-api.zip"
              },
              "Handler": "resources/users.getAllUsers",
              "Runtime": "nodejs12.x",
              "FunctionName": "yoyolunchbox-api-production-adminGetAllUsers",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": "arn:aws:iam::321082332978:role/yoyo-lambda-s3-read-role",
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-36cc262a"
                ],
                "SubnetIds": [
                  "subnet-c30953e2",
                  "subnet-788fd31e",
                  "subnet-b2fc9c83",
                  "subnet-f66d81ba",
                  "subnet-ac92cbf3",
                  "subnet-9ac8de94"
                ]
              }
            },
            "DependsOn": [
              "AdminGetAllUsersLogGroup"
            ]
          },
          "CreateUserLambdaVersion5Me7l8Q5FRUtE4bPHeDDIe4gG9ezXMK03X9HZum2J5E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUserLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "GetUserLambdaVersion2HgXOxnSEY2kqIJ1hcQdBhzu65cPQRDEEMCEZMUzRY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "UpdateUserLambdaVersionKInAIIBicc4sbRAtjLRZD75nX2cLhY7EUoblpyn0CVI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUserLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "GetUserOrdersLambdaVersions66QbM5aN1MahK2eX0vQD1SJ5TfRSjT6dbwE4rGY6Zo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserOrdersLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "GetUserTransactionsLambdaVersion75GYkalStdsftNEkczPFJ84q0GhhKW0r5zOgULNS0I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserTransactionsLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "CreatePaymentsOrderLambdaVersionZPnPAr6ozKFczVqrfT6dq05hTZiEb1ltzUBZ2raeRk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreatePaymentsOrderLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "UpdateWalletBalanceLambdaVersionIH5UuPsWzEyWpFSjYp17uYkP4RUlkCq7FUXPTRPZM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateWalletBalanceLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "GetUserWalletBalanceLambdaVersionSy7LyWzwTr7ZadrvuEPPfcfot2UGUCBfnXg2lCqt8WM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUserWalletBalanceLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "GetMenuLambdaVersionmnq107fPmghzcy5xnIWojSs68seYPdFCB7bkZeMY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMenuLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "GetFoodImageLambdaVersionRmBcXhY7hLIP5mnhQnJdJDGq3Fb23uQ4UTAETMILR4o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetFoodImageLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "PlaceOrderLambdaVersionQzOvaCTBVvOXF9kqZnep2E7Bqv3IuIsUErxAbaTJeQk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PlaceOrderLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "CancelOrderLambdaVersionlDgTTswPgRkM97XiAP0ijAsm2ATkIK81fgd62cGDo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CancelOrderLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetOrdersLambdaVersionjQFuJ3da1wOvs61fySYx3olQw2tSJxg4x33JP5VbQQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetOrdersLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminPlaceOrderLambdaVersiond1Jft4Q1g5uGJgJCRHQf0b5p35CmMObTz3VDt1bxfi4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminPlaceOrderLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminUpdateOrderStatusLambdaVersionjDxgxyOP26BDAxlamYzU389uJ6UOSYEQDpASQ0a44c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminUpdateOrderStatusLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetMenuLambdaVersion5eNl0xGr7ax8BTKbH4t0F8ShWPiBxcjuvlga9IA3Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetMenuLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetTransactionsLambdaVersionWpMLpi6LVCZXW8ziI2Ok3LhDDcxxOMxalc0YZ5jlLQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetTransactionsLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminAddMenuLambdaVersion4SrmQQoDRe4Myn17Xn9IDrjsotmMIInQ2wSfKBXQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminAddMenuLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminEditMenuLambdaVersionzRBV3jj38PLr8WZ7NJKC4WE86xlPwF1zc3MXJjRpag": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminEditMenuLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminDeleteMenuLambdaVersion6vnsNxzzxoKvAJEKZhwG1kZpm1whqR3FElafuj6Ls": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminDeleteMenuLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetUserWalletBalanceLambdaVersionelAn7yl1CFjv0vN4i3ZnRRMTa4uX6yxiwzOaLXxa8M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetUserWalletBalanceLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetUserLambdaVersionuQnV16rDtJJ1QUPdDCZoR5bc3AE9BR2E16yPMTatRM8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetUserLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminUpdateUserLambdaVersionB7X9IVgBBiozogBWGRyYBpuSKnc5wVvaFBE9NE1pZs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminUpdateUserLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminAddUserTransactionLambdaVersionIrA0WPWdapzfs7urPtRXBwi4nX8DOItx4Ur0mYiFFU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminAddUserTransactionLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminUpdateOrderLambdaVersion2tYQYKEbNznFlCOPbfSoMfxTyqMr2UF8FlJ0UbZI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminUpdateOrderLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminCancelOrderLambdaVersionS04sM7Ynv878sxaOfhJP1N8R3MVvlDiMU5AjqWGk8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminCancelOrderLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetOrdersToExportLambdaVersionJVUOZorO2MzZZQZMJ3A7r3hz7seUBvYcaoHZizojNXw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetOrdersToExportLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminExportOrdersToShipDayLambdaVersionjKRMk7iX0xqJvNIy31FyhMDoT2KFVTereY0KFPXgI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminExportOrdersToShipDayLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "AdminGetAllUsersLambdaVersion5xEnihRLJAM1fKuhqvnRsh1hOj0emcAt8pC9Ug6eVxA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AdminGetAllUsersLambdaFunction"
              },
              "CodeSha256": "iIoXfqwGIyhnqpdD9tOS6VCTL7uhN6CbXKcAh4GBoD0="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "production-yoyolunchbox-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserOrders": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "orders",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserOrdersUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserOrders"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserOrdersUsernameVarPageVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserOrdersUsernameVar"
              },
              "PathPart": "{page}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserOrdersUsernameVarPageVarStatusVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserOrdersUsernameVarPageVar"
              },
              "PathPart": "{status}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserTransactions": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "transactions",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserTransactionsUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserTransactions"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserBalance": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "balance",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserBalanceUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserBalance"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePayments": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "payments",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePaymentsOrder": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePayments"
              },
              "PathPart": "order",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePaymentsUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePayments"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePaymentsUserWallet": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePaymentsUser"
              },
              "PathPart": "wallet",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceMenu": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "menu",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFood": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "food",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFoodImage": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFood"
              },
              "PathPart": "image",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFoodImageKeyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFoodImage"
              },
              "PathPart": "{key}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOrders": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "orders",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdmin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "admin",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrders": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdmin"
              },
              "PathPart": "orders",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrdersDateVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "PathPart": "{date}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrdersUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrdersUpdateOrderidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminOrdersUpdate"
              },
              "PathPart": "{orderId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrdersUpdateOrderidVarStatusVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminOrdersUpdateOrderidVar"
              },
              "PathPart": "{status}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrdersExport": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "PathPart": "export",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminMenu": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdmin"
              },
              "PathPart": "menu",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminMenuAdd": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminMenu"
              },
              "PathPart": "add",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminMenuEdit": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminMenu"
              },
              "PathPart": "edit",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminMenuIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminMenu"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminTransactions": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdmin"
              },
              "PathPart": "transactions",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdmin"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminUserBalance": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminUser"
              },
              "PathPart": "balance",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminUserBalanceUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminUserBalance"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminUserUsernameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminUser"
              },
              "PathPart": "{username}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminUserTransaction": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdminUser"
              },
              "PathPart": "transaction",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminOrderstoexport": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdmin"
              },
              "PathPart": "orders_to_export",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceAdminUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAdmin"
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminOrdersDateVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrdersDateVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminOrdersUpdateOrderidVarStatusVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrdersUpdateOrderidVarStatusVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminMenuOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenu"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminTransactionsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminTransactions"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminMenuAddOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenuAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminMenuEditOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenuEdit"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminMenuIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenuIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminUserBalanceUsernameVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserBalanceUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminUserUsernameVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PUT,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminUserTransactionOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserTransaction"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminOrdersOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminOrderstoexportOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrderstoexport"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminOrdersExportOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrdersExport"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAdminUsersOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserUsernameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodUserPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodUserOrdersUsernameVarPageVarStatusVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserOrdersUsernameVarPageVarStatusVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserOrdersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodUserTransactionsUsernameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserTransactionsUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserTransactionsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodPaymentsOrderPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePaymentsOrder"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreatePaymentsOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodPaymentsUserWalletPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePaymentsUserWallet"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateWalletBalanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodUserBalanceUsernameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserBalanceUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetUserWalletBalanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodMenuPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceMenu"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetMenuLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetMenuLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFoodImageKeyVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFoodImageKeyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetFoodImageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodOrdersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PlaceOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodOrdersDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CancelOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreobLR6NkYPApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminOrdersDateVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrdersDateVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetOrdersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminOrdersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminPlaceOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminOrdersUpdateOrderidVarStatusVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrdersUpdateOrderidVarStatusVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminUpdateOrderStatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminMenuPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenu"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetMenuLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminTransactionsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminTransactions"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetTransactionsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminMenuAddPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenuAdd"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminAddMenuLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminMenuEditPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenuEdit"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminEditMenuLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminMenuIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminMenuIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminDeleteMenuLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminUserBalanceUsernameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserBalanceUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetUserWalletBalanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminUserUsernameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": "lmomtp",
              "AuthorizationScopes": [
                "https://baqg6112pd.execute-api.us-east-1.amazonaws.com/all.all"
              ],
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AdminGetUserLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAdminUserUsernameVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserUsernameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminUpdateUserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminUserTransactionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUserTransaction"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminAddUserTransactionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminOrdersPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": "lmomtp",
              "AuthorizationScopes": [
                "https://baqg6112pd.execute-api.us-east-1.amazonaws.com/all.all"
              ],
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminUpdateOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AdminUpdateOrderLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAdminOrdersDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminCancelOrderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminOrderstoexportPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrderstoexport"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": "lmomtp",
              "AuthorizationScopes": [
                "https://baqg6112pd.execute-api.us-east-1.amazonaws.com/all.all"
              ],
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetOrdersToExportLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AdminGetOrdersToExportLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAdminOrdersExportPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminOrdersExport"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminExportOrdersToShipDayLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "ApiGatewayMethodAdminUsersGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAdminUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AdminGetAllUsersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer"
          },
          "1UnderscoreobLR6NkYPApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "1_obLR6NkYP",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP"
              ]
            }
          },
          "1UnderscoreZ2Cc2hIvXApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "1_Z2Cc2hIvX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX"
              ]
            }
          },
          "ApiGatewayDeployment1642934781151": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "production"
            },
            "DependsOn": [
              "ApiGatewayMethodAdminOrdersDateVarOptions",
              "ApiGatewayMethodAdminOrdersUpdateOrderidVarStatusVarOptions",
              "ApiGatewayMethodAdminMenuOptions",
              "ApiGatewayMethodAdminTransactionsOptions",
              "ApiGatewayMethodAdminMenuAddOptions",
              "ApiGatewayMethodAdminMenuEditOptions",
              "ApiGatewayMethodAdminMenuIdVarOptions",
              "ApiGatewayMethodAdminUserBalanceUsernameVarOptions",
              "ApiGatewayMethodAdminUserUsernameVarOptions",
              "ApiGatewayMethodAdminUserTransactionOptions",
              "ApiGatewayMethodAdminOrdersOptions",
              "ApiGatewayMethodAdminOrderstoexportOptions",
              "ApiGatewayMethodAdminOrdersExportOptions",
              "ApiGatewayMethodAdminUsersOptions",
              "ApiGatewayMethodUserUsernameVarGet",
              "ApiGatewayMethodUserPut",
              "ApiGatewayMethodUserOrdersUsernameVarPageVarStatusVarGet",
              "ApiGatewayMethodUserTransactionsUsernameVarGet",
              "ApiGatewayMethodPaymentsOrderPost",
              "ApiGatewayMethodPaymentsUserWalletPost",
              "ApiGatewayMethodUserBalanceUsernameVarGet",
              "ApiGatewayMethodMenuPost",
              "ApiGatewayMethodFoodImageKeyVarGet",
              "ApiGatewayMethodOrdersPost",
              "ApiGatewayMethodOrdersDelete",
              "ApiGatewayMethodAdminOrdersDateVarGet",
              "ApiGatewayMethodAdminOrdersPost",
              "ApiGatewayMethodAdminOrdersUpdateOrderidVarStatusVarPut",
              "ApiGatewayMethodAdminMenuPost",
              "ApiGatewayMethodAdminTransactionsPost",
              "ApiGatewayMethodAdminMenuAddPost",
              "ApiGatewayMethodAdminMenuEditPost",
              "ApiGatewayMethodAdminMenuIdVarDelete",
              "ApiGatewayMethodAdminUserBalanceUsernameVarGet",
              "ApiGatewayMethodAdminUserUsernameVarGet",
              "ApiGatewayMethodAdminUserUsernameVarPut",
              "ApiGatewayMethodAdminUserTransactionPost",
              "ApiGatewayMethodAdminOrdersPatch",
              "ApiGatewayMethodAdminOrdersDelete",
              "ApiGatewayMethodAdminOrderstoexportPost",
              "ApiGatewayMethodAdminOrdersExportPost",
              "ApiGatewayMethodAdminUsersGet"
            ]
          },
          "GetUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserOrdersLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserOrdersLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserTransactionsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserTransactionsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreatePaymentsOrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreatePaymentsOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateWalletBalanceLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateWalletBalanceLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetUserWalletBalanceLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUserWalletBalanceLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetMenuLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetFoodImageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetFoodImageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PlaceOrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PlaceOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CancelOrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CancelOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetOrdersLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetOrdersLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminPlaceOrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminPlaceOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminUpdateOrderStatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminUpdateOrderStatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetMenuLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetMenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetTransactionsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetTransactionsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminAddMenuLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminAddMenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminEditMenuLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminEditMenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminDeleteMenuLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminDeleteMenuLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetUserWalletBalanceLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetUserWalletBalanceLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminUpdateUserLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminUpdateUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminAddUserTransactionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminAddUserTransactionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminUpdateOrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminUpdateOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminCancelOrderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminCancelOrderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetOrdersToExportLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetOrdersToExportLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminExportOrdersToShipDayLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminExportOrdersToShipDayLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AdminGetAllUsersLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AdminGetAllUsersLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-ServerlessDeploymentBucketName"
            }
          },
          "CreateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUserLambdaVersion5Me7l8Q5FRUtE4bPHeDDIe4gG9ezXMK03X9HZum2J5E"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-CreateUserLambdaFunctionQualifiedArn"
            }
          },
          "GetUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserLambdaVersion2HgXOxnSEY2kqIJ1hcQdBhzu65cPQRDEEMCEZMUzRY"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-GetUserLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUserLambdaVersionKInAIIBicc4sbRAtjLRZD75nX2cLhY7EUoblpyn0CVI"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-UpdateUserLambdaFunctionQualifiedArn"
            }
          },
          "GetUserOrdersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserOrdersLambdaVersions66QbM5aN1MahK2eX0vQD1SJ5TfRSjT6dbwE4rGY6Zo"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-GetUserOrdersLambdaFunctionQualifiedArn"
            }
          },
          "GetUserTransactionsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserTransactionsLambdaVersion75GYkalStdsftNEkczPFJ84q0GhhKW0r5zOgULNS0I"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-GetUserTransactionsLambdaFunctionQualifiedArn"
            }
          },
          "CreatePaymentsOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreatePaymentsOrderLambdaVersionZPnPAr6ozKFczVqrfT6dq05hTZiEb1ltzUBZ2raeRk"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-CreatePaymentsOrderLambdaFunctionQualifiedArn"
            }
          },
          "UpdateWalletBalanceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateWalletBalanceLambdaVersionIH5UuPsWzEyWpFSjYp17uYkP4RUlkCq7FUXPTRPZM"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-UpdateWalletBalanceLambdaFunctionQualifiedArn"
            }
          },
          "GetUserWalletBalanceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUserWalletBalanceLambdaVersionSy7LyWzwTr7ZadrvuEPPfcfot2UGUCBfnXg2lCqt8WM"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-GetUserWalletBalanceLambdaFunctionQualifiedArn"
            }
          },
          "GetMenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMenuLambdaVersionmnq107fPmghzcy5xnIWojSs68seYPdFCB7bkZeMY"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-GetMenuLambdaFunctionQualifiedArn"
            }
          },
          "GetFoodImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetFoodImageLambdaVersionRmBcXhY7hLIP5mnhQnJdJDGq3Fb23uQ4UTAETMILR4o"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-GetFoodImageLambdaFunctionQualifiedArn"
            }
          },
          "PlaceOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PlaceOrderLambdaVersionQzOvaCTBVvOXF9kqZnep2E7Bqv3IuIsUErxAbaTJeQk"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-PlaceOrderLambdaFunctionQualifiedArn"
            }
          },
          "CancelOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CancelOrderLambdaVersionlDgTTswPgRkM97XiAP0ijAsm2ATkIK81fgd62cGDo"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-CancelOrderLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetOrdersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetOrdersLambdaVersionjQFuJ3da1wOvs61fySYx3olQw2tSJxg4x33JP5VbQQ"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetOrdersLambdaFunctionQualifiedArn"
            }
          },
          "AdminPlaceOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminPlaceOrderLambdaVersiond1Jft4Q1g5uGJgJCRHQf0b5p35CmMObTz3VDt1bxfi4"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminPlaceOrderLambdaFunctionQualifiedArn"
            }
          },
          "AdminUpdateOrderStatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminUpdateOrderStatusLambdaVersionjDxgxyOP26BDAxlamYzU389uJ6UOSYEQDpASQ0a44c"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminUpdateOrderStatusLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetMenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetMenuLambdaVersion5eNl0xGr7ax8BTKbH4t0F8ShWPiBxcjuvlga9IA3Q"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetMenuLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetTransactionsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetTransactionsLambdaVersionWpMLpi6LVCZXW8ziI2Ok3LhDDcxxOMxalc0YZ5jlLQ"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetTransactionsLambdaFunctionQualifiedArn"
            }
          },
          "AdminAddMenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminAddMenuLambdaVersion4SrmQQoDRe4Myn17Xn9IDrjsotmMIInQ2wSfKBXQ"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminAddMenuLambdaFunctionQualifiedArn"
            }
          },
          "AdminEditMenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminEditMenuLambdaVersionzRBV3jj38PLr8WZ7NJKC4WE86xlPwF1zc3MXJjRpag"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminEditMenuLambdaFunctionQualifiedArn"
            }
          },
          "AdminDeleteMenuLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminDeleteMenuLambdaVersion6vnsNxzzxoKvAJEKZhwG1kZpm1whqR3FElafuj6Ls"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminDeleteMenuLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetUserWalletBalanceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetUserWalletBalanceLambdaVersionelAn7yl1CFjv0vN4i3ZnRRMTa4uX6yxiwzOaLXxa8M"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetUserWalletBalanceLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetUserLambdaVersionuQnV16rDtJJ1QUPdDCZoR5bc3AE9BR2E16yPMTatRM8"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetUserLambdaFunctionQualifiedArn"
            }
          },
          "AdminUpdateUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminUpdateUserLambdaVersionB7X9IVgBBiozogBWGRyYBpuSKnc5wVvaFBE9NE1pZs"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminUpdateUserLambdaFunctionQualifiedArn"
            }
          },
          "AdminAddUserTransactionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminAddUserTransactionLambdaVersionIrA0WPWdapzfs7urPtRXBwi4nX8DOItx4Ur0mYiFFU"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminAddUserTransactionLambdaFunctionQualifiedArn"
            }
          },
          "AdminUpdateOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminUpdateOrderLambdaVersion2tYQYKEbNznFlCOPbfSoMfxTyqMr2UF8FlJ0UbZI"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminUpdateOrderLambdaFunctionQualifiedArn"
            }
          },
          "AdminCancelOrderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminCancelOrderLambdaVersionS04sM7Ynv878sxaOfhJP1N8R3MVvlDiMU5AjqWGk8"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminCancelOrderLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetOrdersToExportLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetOrdersToExportLambdaVersionJVUOZorO2MzZZQZMJ3A7r3hz7seUBvYcaoHZizojNXw"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetOrdersToExportLambdaFunctionQualifiedArn"
            }
          },
          "AdminExportOrdersToShipDayLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminExportOrdersToShipDayLambdaVersionjKRMk7iX0xqJvNIy31FyhMDoT2KFVTereY0KFPXgI"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminExportOrdersToShipDayLambdaFunctionQualifiedArn"
            }
          },
          "AdminGetAllUsersLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AdminGetAllUsersLambdaVersion5xEnihRLJAM1fKuhqvnRsh1hOj0emcAt8pC9Ug6eVxA"
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-AdminGetAllUsersLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/production"
                ]
              ]
            },
            "Export": {
              "Name": "sls-yoyolunchbox-api-production-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "vpc": {
        "securityGroupIds": [
          "sg-36cc262a"
        ],
        "subnetIds": [
          "subnet-c30953e2",
          "subnet-788fd31e",
          "subnet-b2fc9c83",
          "subnet-f66d81ba",
          "subnet-ac92cbf3",
          "subnet-9ac8de94"
        ]
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "createUser": {
        "handler": "resources/users.createUser",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [],
        "name": "yoyolunchbox-api-production-createUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "CreateUserLambdaVersion5Me7l8Q5FRUtE4bPHeDDIe4gG9ezXMK03X9HZum2J5E"
      },
      "getUser": {
        "handler": "resources/users.getUser",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "user/{username}",
              "method": "get",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-getUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "GetUserLambdaVersion2HgXOxnSEY2kqIJ1hcQdBhzu65cPQRDEEMCEZMUzRY"
      },
      "updateUser": {
        "handler": "resources/users.updateUser",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "user",
              "method": "put",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-updateUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "UpdateUserLambdaVersionKInAIIBicc4sbRAtjLRZD75nX2cLhY7EUoblpyn0CVI"
      },
      "getUserOrders": {
        "handler": "resources/users.getUserOrders",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserOrdersLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserOrdersLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "user/orders/{username}/{page}/{status}",
              "method": "get",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-getUserOrders",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "GetUserOrdersLambdaVersions66QbM5aN1MahK2eX0vQD1SJ5TfRSjT6dbwE4rGY6Zo"
      },
      "getUserTransactions": {
        "handler": "resources/users.getUserTransactions",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserTransactionsLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserTransactionsLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "user/transactions/{username}",
              "method": "get",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-getUserTransactions",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "GetUserTransactionsLambdaVersion75GYkalStdsftNEkczPFJ84q0GhhKW0r5zOgULNS0I"
      },
      "createPaymentsOrder": {
        "handler": "resources/payments.createPaymentsOrder",
        "events": [
          {
            "http": {
              "path": "payments/order",
              "method": "post",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-createPaymentsOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "CreatePaymentsOrderLambdaVersionZPnPAr6ozKFczVqrfT6dq05hTZiEb1ltzUBZ2raeRk"
      },
      "updateWalletBalance": {
        "handler": "resources/payments.updateWalletBalance",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateWalletBalanceLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateWalletBalanceLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "payments/user/wallet",
              "method": "post",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-updateWalletBalance",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "UpdateWalletBalanceLambdaVersionIH5UuPsWzEyWpFSjYp17uYkP4RUlkCq7FUXPTRPZM"
      },
      "getUserWalletBalance": {
        "handler": "resources/users.getUserWalletBalance",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserWalletBalanceLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUserWalletBalanceLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "user/balance/{username}",
              "method": "get",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-getUserWalletBalance",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "GetUserWalletBalanceLambdaVersionSy7LyWzwTr7ZadrvuEPPfcfot2UGUCBfnXg2lCqt8WM"
      },
      "getMenu": {
        "handler": "resources/menu.getMenu",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "menu",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-getMenu",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "GetMenuLambdaVersionmnq107fPmghzcy5xnIWojSs68seYPdFCB7bkZeMY"
      },
      "getFoodImage": {
        "handler": "resources/food.getFoodImage",
        "events": [
          {
            "http": {
              "path": "food/image/{key}",
              "method": "get",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-getFoodImage",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetFoodImageLambdaVersionRmBcXhY7hLIP5mnhQnJdJDGq3Fb23uQ4UTAETMILR4o"
      },
      "placeOrder": {
        "handler": "resources/orders.placeOrder",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PlaceOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PlaceOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "orders",
              "method": "post",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-placeOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "PlaceOrderLambdaVersionQzOvaCTBVvOXF9kqZnep2E7Bqv3IuIsUErxAbaTJeQk"
      },
      "cancelOrder": {
        "handler": "resources/orders.cancelOrder",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CancelOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CancelOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "orders",
              "method": "delete",
              "authorizer": {
                "name": "1_obLR6NkYP",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_obLR6NkYP",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-cancelOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "CancelOrderLambdaVersionlDgTTswPgRkM97XiAP0ijAsm2ATkIK81fgd62cGDo"
      },
      "adminGetOrders": {
        "handler": "resources/orders.getOrders",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetOrdersLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetOrdersLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/orders/{date}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "get",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetOrders",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetOrdersLambdaVersionjQFuJ3da1wOvs61fySYx3olQw2tSJxg4x33JP5VbQQ"
      },
      "adminPlaceOrder": {
        "handler": "resources/orders.placeOrder",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminPlaceOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminPlaceOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/orders",
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminPlaceOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminPlaceOrderLambdaVersiond1Jft4Q1g5uGJgJCRHQf0b5p35CmMObTz3VDt1bxfi4"
      },
      "adminUpdateOrderStatus": {
        "handler": "resources/orders.updateOrderStatus",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminUpdateOrderStatusLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminUpdateOrderStatusLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/orders/update/{orderId}/{status}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "put",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminUpdateOrderStatus",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminUpdateOrderStatusLambdaVersionjDxgxyOP26BDAxlamYzU389uJ6UOSYEQDpASQ0a44c"
      },
      "adminGetMenu": {
        "handler": "resources/menu.getMenu",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/menu",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetMenu",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetMenuLambdaVersion5eNl0xGr7ax8BTKbH4t0F8ShWPiBxcjuvlga9IA3Q"
      },
      "adminGetTransactions": {
        "handler": "resources/payments.getTransactions",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetTransactionsLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetTransactionsLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/transactions",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetTransactions",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetTransactionsLambdaVersionWpMLpi6LVCZXW8ziI2Ok3LhDDcxxOMxalc0YZ5jlLQ"
      },
      "adminAddMenu": {
        "handler": "resources/menu.addMenu",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminAddMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminAddMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/menu/add",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminAddMenu",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminAddMenuLambdaVersion4SrmQQoDRe4Myn17Xn9IDrjsotmMIInQ2wSfKBXQ"
      },
      "adminEditMenu": {
        "handler": "resources/menu.editMenu",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminEditMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminEditMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/menu/edit",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminEditMenu",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminEditMenuLambdaVersionzRBV3jj38PLr8WZ7NJKC4WE86xlPwF1zc3MXJjRpag"
      },
      "adminDeleteMenu": {
        "handler": "resources/menu.deleteMenu",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminDeleteMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminDeleteMenuLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/menu/{id}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "delete",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminDeleteMenu",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminDeleteMenuLambdaVersion6vnsNxzzxoKvAJEKZhwG1kZpm1whqR3FElafuj6Ls"
      },
      "adminGetUserWalletBalance": {
        "handler": "resources/users.getUserWalletBalance",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetUserWalletBalanceLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetUserWalletBalanceLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/user/balance/{username}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "get",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetUserWalletBalance",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetUserWalletBalanceLambdaVersionelAn7yl1CFjv0vN4i3ZnRRMTa4uX6yxiwzOaLXxa8M"
      },
      "adminGetUser": {
        "handler": "resources/users.getUser",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/user/{username}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "get",
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "managedExternally": false,
                "authorizerId": "lmomtp",
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [],
                "scopes": [
                  "https://baqg6112pd.execute-api.us-east-1.amazonaws.com/all.all"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetUserLambdaVersionuQnV16rDtJJ1QUPdDCZoR5bc3AE9BR2E16yPMTatRM8"
      },
      "adminUpdateUser": {
        "handler": "resources/users.adminUpdateUser",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminUpdateUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminUpdateUserLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/user/{username}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PUT"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "put",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminUpdateUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminUpdateUserLambdaVersionB7X9IVgBBiozogBWGRyYBpuSKnc5wVvaFBE9NE1pZs"
      },
      "adminAddUserTransaction": {
        "handler": "resources/users.addTransaction",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminAddUserTransactionLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminAddUserTransactionLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/user/transaction",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminAddUserTransaction",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminAddUserTransactionLambdaVersionIrA0WPWdapzfs7urPtRXBwi4nX8DOItx4Ur0mYiFFU"
      },
      "adminUpdateOrder": {
        "handler": "resources/orders.updateOrder",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminUpdateOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminUpdateOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/orders",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "patch",
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "managedExternally": false,
                "authorizerId": "lmomtp",
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [],
                "scopes": [
                  "https://baqg6112pd.execute-api.us-east-1.amazonaws.com/all.all"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminUpdateOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminUpdateOrderLambdaVersion2tYQYKEbNznFlCOPbfSoMfxTyqMr2UF8FlJ0UbZI"
      },
      "adminCancelOrder": {
        "handler": "resources/orders.cancelOrder",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminCancelOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminCancelOrderLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/orders",
              "method": "delete",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminCancelOrder",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminCancelOrderLambdaVersionS04sM7Ynv878sxaOfhJP1N8R3MVvlDiMU5AjqWGk8"
      },
      "adminGetOrdersToExport": {
        "handler": "resources/orders.getOrdersToExport",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetOrdersToExportLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetOrdersToExportLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/orders_to_export",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "managedExternally": false,
                "authorizerId": "lmomtp",
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [],
                "scopes": [
                  "https://baqg6112pd.execute-api.us-east-1.amazonaws.com/all.all"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetOrdersToExport",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetOrdersToExportLambdaVersionJVUOZorO2MzZZQZMJ3A7r3hz7seUBvYcaoHZizojNXw"
      },
      "adminExportOrdersToShipDay": {
        "handler": "resources/orders.exportToShipDay",
        "timeout": 300,
        "events": [
          {
            "http": {
              "path": "admin/orders/export",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "post",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminExportOrdersToShipDay",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AdminExportOrdersToShipDayLambdaVersionjKRMk7iX0xqJvNIy31FyhMDoT2KFVTereY0KFPXgI"
      },
      "adminGetAllUsers": {
        "handler": "resources/users.getAllUsers",
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetAllUsersLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AdminGetAllUsersLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "events": [
          {
            "http": {
              "path": "admin/users",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "method": "get",
              "authorizer": {
                "name": "1_Z2Cc2hIvX",
                "arn": "arn:aws:cognito-idp:us-east-1:321082332978:userpool/us-east-1_Z2Cc2hIvX",
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "yoyolunchbox-api-production-adminGetAllUsers",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "versionLogicalId": "AdminGetAllUsersLambdaVersion5xEnihRLJAM1fKuhqvnRsh1hOj0emcAt8pC9Ug6eVxA"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/sri/yoyolunchbox-api/.serverless/yoyolunchbox-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/yoyolunchbox-api/production/1642934789698-2022-01-23T10:46:29.698Z",
    "artifact": "yoyolunchbox-api.zip"
  }
}